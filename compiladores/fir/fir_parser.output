Terminals unused in grammar

    tPRIVATE
    tPUBLIC


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | declarations

    3 declarations: declaration
    4             | declarations declaration

    5 declaration: vardec ';'
    6            | funcdecl
    7            | funcdef

    8 vardec: types '*' tIDENTIFIER var_aux
    9       | types tIDENTIFIER var_aux
   10       | tEXTERNAL types tIDENTIFIER

   11 vardecs: vardec ';'
   12        | vardecs vardec ';'

   13 vardecs_aux: %empty
   14            | vardecs

   15 var_aux: %empty
   16        | '=' expr

   17 funcdecl: types '*' tIDENTIFIER tCBRACKL args tCBRACKR
   18         | types tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR
   19         | types tIDENTIFIER tCBRACKL args tCBRACKR
   20         | void_type '*' tIDENTIFIER tCBRACKL args tCBRACKR
   21         | void_type tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR
   22         | void_type tIDENTIFIER tCBRACKL args tCBRACKR

   23 funcdef: types '*' tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue
   24        | types tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue
   25        | types tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue
   26        | void_type '*' tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue
   27        | void_type tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue
   28        | void_type tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue

   29 prologue: %empty
   30         | tAT block

   31 epilogue: %empty
   32         | tSHIFT block

   33 block: '{' vardecs_aux instrs_aux '}'

   34 rtval: %empty
   35      | tRTVALUE literal

   36 types: type
   37      | '<' types '>'

   38 type: tTYPE_INT
   39     | tTYPE_STRING
   40     | tTYPE_FLOAT

   41 void_type: tTYPE_VOID

   42 args: %empty
   43     | arg
   44     | args tCOMMA arg

   45 arg: types tIDENTIFIER

   46 instrs: stmt
   47       | instrs stmt

   48 instrs_aux: %empty
   49           | instrs

   50 leave: tLEAVE ';'
   51      | tLEAVE tINTEGER ';'

   52 restart: tRESTART ';'
   53        | tRESTART tINTEGER ';'

   54 stmt: expr ';'
   55     | tWRITE exprs ';'
   56     | tWRITELN exprs ';'
   57     | tWHILE expr tDO block
   58     | tWHILE expr tDO block tFINALLY block
   59     | tIF expr tTHEN stmt
   60     | tIF expr tTHEN stmt tELSE stmt
   61     | leave
   62     | restart
   63     | tRETURN
   64     | block

   65 lval: tIDENTIFIER
   66     | lval tBRACKL expr tBRACKR
   67     | tCBRACKL expr tCBRACKR tBRACKL expr tBRACKR

   68 expr: literal
   69     | string
   70     | lval
   71     | lval '=' expr
   72     | expr '+' expr
   73     | expr '-' expr
   74     | expr '*' expr
   75     | expr '/' expr
   76     | expr '%' expr
   77     | expr '<' expr
   78     | expr tGE expr
   79     | expr tLE expr
   80     | expr tNE expr
   81     | expr tEQ expr
   82     | expr '>' expr
   83     | tLOGNOT expr
   84     | expr tLOGAND expr
   85     | expr tLOGOR expr
   86     | '+' expr
   87     | '-' expr
   88     | tIDENTIFIER tCBRACKL exprs_aux tCBRACKR
   89     | tSIZEOF tCBRACKL expr tCBRACKR
   90     | tAT lval
   91     | tCBRACKL expr tCBRACKR
   92     | tBRACKL expr tBRACKR
   93     | lval '?'

   94 exprs: expr
   95      | exprs tCOMMA expr

   96 exprs_aux: %empty
   97          | exprs

   98 string: tSTRING
   99       | string tSTRING

  100 literal: tINTEGER
  101        | tFLOAT
  102        | tNULLPTR


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 76
    '*' (42) 8 17 20 23 26 74
    '+' (43) 72 86
    '-' (45) 73 87
    '/' (47) 75
    ';' (59) 5 11 12 50 51 52 53 54 55 56
    '<' (60) 37 77
    '=' (61) 16 71
    '>' (62) 37 82
    '?' (63) 93
    '{' (123) 33
    '}' (125) 33
    error (256)
    tWHILE (258) 57 58
    tIF (259) 59 60
    tWRITE (260) 55
    tWRITELN (261) 56
    tAT (262) 30 90
    tSHIFT (263) 32
    tFINALLY (264) 58
    tDO (265) 57 58
    tLEAVE (266) 50 51
    tRESTART (267) 52 53
    tRETURN (268) 63
    tSIZEOF (269) 89
    tLOGAND (270) 84
    tLOGNOT (271) 83
    tLOGOR (272) 85
    tTHEN (273) 59 60
    tEXTERNAL (274) 10 18 21 24 27
    tPRIVATE (275)
    tRTVALUE (276) 35
    tPUBLIC (277)
    tTYPE_INT (278) 38
    tTYPE_STRING (279) 39
    tTYPE_FLOAT (280) 40
    tTYPE_VOID (281) 41
    tINTEGER <i> (282) 51 53 100
    tFLOAT <d> (283) 101
    tIDENTIFIER <s> (284) 8 9 10 17 18 19 20 21 22 23 24 25 26 27 28 45 65 88
    tSTRING <s> (285) 98 99
    tNULLPTR <expression> (286) 102
    tELSE (287) 60
    tCOMMA (288) 44 95
    tCBRACKL (289) 17 18 19 20 21 22 23 24 25 26 27 28 67 88 89 91
    tCBRACKR (290) 17 18 19 20 21 22 23 24 25 26 27 28 67 88 89 91
    tBRACKL (291) 66 67 92
    tBRACKR (292) 66 67 92
    tEQ (293) 81
    tNE (294) 80
    tGE (295) 78
    tLE (296) 79
    tUNARY (297)


Nonterminals, with rules where they appear

    $accept (55)
        on left: 0
    program <sequence> (56)
        on left: 1 2
        on right: 0
    declarations <sequence> (57)
        on left: 3 4
        on right: 2 4
    declaration <node> (58)
        on left: 5 6 7
        on right: 3 4
    vardec <node> (59)
        on left: 8 9 10
        on right: 5 11 12
    vardecs <sequence> (60)
        on left: 11 12
        on right: 12 14
    vardecs_aux <sequence> (61)
        on left: 13 14
        on right: 33
    var_aux <expression> (62)
        on left: 15 16
        on right: 8 9
    funcdecl <node> (63)
        on left: 17 18 19 20 21 22
        on right: 6
    funcdef <node> (64)
        on left: 23 24 25 26 27 28
        on right: 7
    prologue <block> (65)
        on left: 29 30
        on right: 23 24 25 26 27 28
    epilogue <block> (66)
        on left: 31 32
        on right: 23 24 25 26 27 28
    block <block> (67)
        on left: 33
        on right: 23 24 25 26 27 28 30 32 57 58 64
    rtval <expression> (68)
        on left: 34 35
        on right: 23 24 25
    types <type> (69)
        on left: 36 37
        on right: 8 9 10 17 18 19 23 24 25 37 45
    type <type> (70)
        on left: 38 39 40
        on right: 36
    void_type <type> (71)
        on left: 41
        on right: 20 21 22 26 27 28
    args <sequence> (72)
        on left: 42 43 44
        on right: 17 18 19 20 21 22 23 24 25 26 27 28 44
    arg <node> (73)
        on left: 45
        on right: 43 44
    instrs <sequence> (74)
        on left: 46 47
        on right: 47 49
    instrs_aux <sequence> (75)
        on left: 48 49
        on right: 33
    leave <node> (76)
        on left: 50 51
        on right: 61
    restart <node> (77)
        on left: 52 53
        on right: 62
    stmt <node> (78)
        on left: 54 55 56 57 58 59 60 61 62 63 64
        on right: 46 47 59 60
    lval <lvalue> (79)
        on left: 65 66 67
        on right: 66 70 71 90 93
    expr <expression> (80)
        on left: 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
        on right: 16 54 57 58 59 60 66 67 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 89 91 92 94 95
    exprs <sequence> (81)
        on left: 94 95
        on right: 55 56 95 97
    exprs_aux <sequence> (82)
        on left: 96 97
        on right: 88
    string <s> (83)
        on left: 98 99
        on right: 69 99
    literal <expression> (84)
        on left: 100 101 102
        on right: 35 68


State 0

    0 $accept: • program $end

    tEXTERNAL     shift, and go to state 1
    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    '<'           shift, and go to state 6

    $default  reduce using rule 1 (program)

    program       go to state 7
    declarations  go to state 8
    declaration   go to state 9
    vardec        go to state 10
    funcdecl      go to state 11
    funcdef       go to state 12
    types         go to state 13
    type          go to state 14
    void_type     go to state 15


State 1

   10 vardec: tEXTERNAL • types tIDENTIFIER

    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    types  go to state 16
    type   go to state 14


State 2

   38 type: tTYPE_INT •

    $default  reduce using rule 38 (type)


State 3

   39 type: tTYPE_STRING •

    $default  reduce using rule 39 (type)


State 4

   40 type: tTYPE_FLOAT •

    $default  reduce using rule 40 (type)


State 5

   41 void_type: tTYPE_VOID •

    $default  reduce using rule 41 (void_type)


State 6

   37 types: '<' • types '>'

    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    types  go to state 17
    type   go to state 14


State 7

    0 $accept: program • $end

    $end  shift, and go to state 18


State 8

    2 program: declarations •
    4 declarations: declarations • declaration

    tEXTERNAL     shift, and go to state 1
    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    tTYPE_VOID    shift, and go to state 5
    '<'           shift, and go to state 6

    $default  reduce using rule 2 (program)

    declaration  go to state 19
    vardec       go to state 10
    funcdecl     go to state 11
    funcdef      go to state 12
    types        go to state 13
    type         go to state 14
    void_type    go to state 15


State 9

    3 declarations: declaration •

    $default  reduce using rule 3 (declarations)


State 10

    5 declaration: vardec • ';'

    ';'  shift, and go to state 20


State 11

    6 declaration: funcdecl •

    $default  reduce using rule 6 (declaration)


State 12

    7 declaration: funcdef •

    $default  reduce using rule 7 (declaration)


State 13

    8 vardec: types • '*' tIDENTIFIER var_aux
    9       | types • tIDENTIFIER var_aux
   17 funcdecl: types • '*' tIDENTIFIER tCBRACKL args tCBRACKR
   18         | types • tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR
   19         | types • tIDENTIFIER tCBRACKL args tCBRACKR
   23 funcdef: types • '*' tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue
   24        | types • tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue
   25        | types • tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue

    tEXTERNAL    shift, and go to state 21
    tIDENTIFIER  shift, and go to state 22
    '*'          shift, and go to state 23


State 14

   36 types: type •

    $default  reduce using rule 36 (types)


State 15

   20 funcdecl: void_type • '*' tIDENTIFIER tCBRACKL args tCBRACKR
   21         | void_type • tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR
   22         | void_type • tIDENTIFIER tCBRACKL args tCBRACKR
   26 funcdef: void_type • '*' tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue
   27        | void_type • tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue
   28        | void_type • tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue

    tEXTERNAL    shift, and go to state 24
    tIDENTIFIER  shift, and go to state 25
    '*'          shift, and go to state 26


State 16

   10 vardec: tEXTERNAL types • tIDENTIFIER

    tIDENTIFIER  shift, and go to state 27


State 17

   37 types: '<' types • '>'

    '>'  shift, and go to state 28


State 18

    0 $accept: program $end •

    $default  accept


State 19

    4 declarations: declarations declaration •

    $default  reduce using rule 4 (declarations)


State 20

    5 declaration: vardec ';' •

    $default  reduce using rule 5 (declaration)


State 21

   18 funcdecl: types tEXTERNAL • tIDENTIFIER tCBRACKL args tCBRACKR
   24 funcdef: types tEXTERNAL • tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue

    tIDENTIFIER  shift, and go to state 29


State 22

    9 vardec: types tIDENTIFIER • var_aux
   19 funcdecl: types tIDENTIFIER • tCBRACKL args tCBRACKR
   25 funcdef: types tIDENTIFIER • tCBRACKL args tCBRACKR rtval prologue block epilogue

    tCBRACKL  shift, and go to state 30
    '='       shift, and go to state 31

    $default  reduce using rule 15 (var_aux)

    var_aux  go to state 32


State 23

    8 vardec: types '*' • tIDENTIFIER var_aux
   17 funcdecl: types '*' • tIDENTIFIER tCBRACKL args tCBRACKR
   23 funcdef: types '*' • tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue

    tIDENTIFIER  shift, and go to state 33


State 24

   21 funcdecl: void_type tEXTERNAL • tIDENTIFIER tCBRACKL args tCBRACKR
   27 funcdef: void_type tEXTERNAL • tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue

    tIDENTIFIER  shift, and go to state 34


State 25

   22 funcdecl: void_type tIDENTIFIER • tCBRACKL args tCBRACKR
   28 funcdef: void_type tIDENTIFIER • tCBRACKL args tCBRACKR prologue block epilogue

    tCBRACKL  shift, and go to state 35


State 26

   20 funcdecl: void_type '*' • tIDENTIFIER tCBRACKL args tCBRACKR
   26 funcdef: void_type '*' • tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue

    tIDENTIFIER  shift, and go to state 36


State 27

   10 vardec: tEXTERNAL types tIDENTIFIER •

    $default  reduce using rule 10 (vardec)


State 28

   37 types: '<' types '>' •

    $default  reduce using rule 37 (types)


State 29

   18 funcdecl: types tEXTERNAL tIDENTIFIER • tCBRACKL args tCBRACKR
   24 funcdef: types tEXTERNAL tIDENTIFIER • tCBRACKL args tCBRACKR rtval prologue block epilogue

    tCBRACKL  shift, and go to state 37


State 30

   19 funcdecl: types tIDENTIFIER tCBRACKL • args tCBRACKR
   25 funcdef: types tIDENTIFIER tCBRACKL • args tCBRACKR rtval prologue block epilogue

    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    $default  reduce using rule 42 (args)

    types  go to state 38
    type   go to state 14
    args   go to state 39
    arg    go to state 40


State 31

   16 var_aux: '=' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 54
    string   go to state 55
    literal  go to state 56


State 32

    9 vardec: types tIDENTIFIER var_aux •

    $default  reduce using rule 9 (vardec)


State 33

    8 vardec: types '*' tIDENTIFIER • var_aux
   17 funcdecl: types '*' tIDENTIFIER • tCBRACKL args tCBRACKR
   23 funcdef: types '*' tIDENTIFIER • tCBRACKL args tCBRACKR rtval prologue block epilogue

    tCBRACKL  shift, and go to state 57
    '='       shift, and go to state 31

    $default  reduce using rule 15 (var_aux)

    var_aux  go to state 58


State 34

   21 funcdecl: void_type tEXTERNAL tIDENTIFIER • tCBRACKL args tCBRACKR
   27 funcdef: void_type tEXTERNAL tIDENTIFIER • tCBRACKL args tCBRACKR prologue block epilogue

    tCBRACKL  shift, and go to state 59


State 35

   22 funcdecl: void_type tIDENTIFIER tCBRACKL • args tCBRACKR
   28 funcdef: void_type tIDENTIFIER tCBRACKL • args tCBRACKR prologue block epilogue

    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    $default  reduce using rule 42 (args)

    types  go to state 38
    type   go to state 14
    args   go to state 60
    arg    go to state 40


State 36

   20 funcdecl: void_type '*' tIDENTIFIER • tCBRACKL args tCBRACKR
   26 funcdef: void_type '*' tIDENTIFIER • tCBRACKL args tCBRACKR prologue block epilogue

    tCBRACKL  shift, and go to state 61


State 37

   18 funcdecl: types tEXTERNAL tIDENTIFIER tCBRACKL • args tCBRACKR
   24 funcdef: types tEXTERNAL tIDENTIFIER tCBRACKL • args tCBRACKR rtval prologue block epilogue

    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    $default  reduce using rule 42 (args)

    types  go to state 38
    type   go to state 14
    args   go to state 62
    arg    go to state 40


State 38

   45 arg: types • tIDENTIFIER

    tIDENTIFIER  shift, and go to state 63


State 39

   19 funcdecl: types tIDENTIFIER tCBRACKL args • tCBRACKR
   25 funcdef: types tIDENTIFIER tCBRACKL args • tCBRACKR rtval prologue block epilogue
   44 args: args • tCOMMA arg

    tCOMMA    shift, and go to state 64
    tCBRACKR  shift, and go to state 65


State 40

   43 args: arg •

    $default  reduce using rule 43 (args)


State 41

   90 expr: tAT • lval

    tIDENTIFIER  shift, and go to state 66
    tCBRACKL     shift, and go to state 67

    lval  go to state 68


State 42

   89 expr: tSIZEOF • tCBRACKL expr tCBRACKR

    tCBRACKL  shift, and go to state 69


State 43

   83 expr: tLOGNOT • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 70
    string   go to state 55
    literal  go to state 56


State 44

  100 literal: tINTEGER •

    $default  reduce using rule 100 (literal)


State 45

  101 literal: tFLOAT •

    $default  reduce using rule 101 (literal)


State 46

   65 lval: tIDENTIFIER •
   88 expr: tIDENTIFIER • tCBRACKL exprs_aux tCBRACKR

    tCBRACKL  shift, and go to state 71

    $default  reduce using rule 65 (lval)


State 47

   98 string: tSTRING •

    $default  reduce using rule 98 (string)


State 48

  102 literal: tNULLPTR •

    $default  reduce using rule 102 (literal)


State 49

   67 lval: tCBRACKL • expr tCBRACKR tBRACKL expr tBRACKR
   91 expr: tCBRACKL • expr tCBRACKR

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 72
    string   go to state 55
    literal  go to state 56


State 50

   92 expr: tBRACKL • expr tBRACKR

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 73
    string   go to state 55
    literal  go to state 56


State 51

   86 expr: '+' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 74
    string   go to state 55
    literal  go to state 56


State 52

   87 expr: '-' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 75
    string   go to state 55
    literal  go to state 56


State 53

   66 lval: lval • tBRACKL expr tBRACKR
   70 expr: lval •
   71     | lval • '=' expr
   93     | lval • '?'

    tBRACKL  shift, and go to state 76
    '='      shift, and go to state 77
    '?'      shift, and go to state 78

    $default  reduce using rule 70 (expr)


State 54

   16 var_aux: '=' expr •
   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91

    $default  reduce using rule 16 (var_aux)


State 55

   69 expr: string •
   99 string: string • tSTRING

    tSTRING  shift, and go to state 92

    $default  reduce using rule 69 (expr)


State 56

   68 expr: literal •

    $default  reduce using rule 68 (expr)


State 57

   17 funcdecl: types '*' tIDENTIFIER tCBRACKL • args tCBRACKR
   23 funcdef: types '*' tIDENTIFIER tCBRACKL • args tCBRACKR rtval prologue block epilogue

    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    $default  reduce using rule 42 (args)

    types  go to state 38
    type   go to state 14
    args   go to state 93
    arg    go to state 40


State 58

    8 vardec: types '*' tIDENTIFIER var_aux •

    $default  reduce using rule 8 (vardec)


State 59

   21 funcdecl: void_type tEXTERNAL tIDENTIFIER tCBRACKL • args tCBRACKR
   27 funcdef: void_type tEXTERNAL tIDENTIFIER tCBRACKL • args tCBRACKR prologue block epilogue

    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    $default  reduce using rule 42 (args)

    types  go to state 38
    type   go to state 14
    args   go to state 94
    arg    go to state 40


State 60

   22 funcdecl: void_type tIDENTIFIER tCBRACKL args • tCBRACKR
   28 funcdef: void_type tIDENTIFIER tCBRACKL args • tCBRACKR prologue block epilogue
   44 args: args • tCOMMA arg

    tCOMMA    shift, and go to state 64
    tCBRACKR  shift, and go to state 95


State 61

   20 funcdecl: void_type '*' tIDENTIFIER tCBRACKL • args tCBRACKR
   26 funcdef: void_type '*' tIDENTIFIER tCBRACKL • args tCBRACKR prologue block epilogue

    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    $default  reduce using rule 42 (args)

    types  go to state 38
    type   go to state 14
    args   go to state 96
    arg    go to state 40


State 62

   18 funcdecl: types tEXTERNAL tIDENTIFIER tCBRACKL args • tCBRACKR
   24 funcdef: types tEXTERNAL tIDENTIFIER tCBRACKL args • tCBRACKR rtval prologue block epilogue
   44 args: args • tCOMMA arg

    tCOMMA    shift, and go to state 64
    tCBRACKR  shift, and go to state 97


State 63

   45 arg: types tIDENTIFIER •

    $default  reduce using rule 45 (arg)


State 64

   44 args: args tCOMMA • arg

    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    types  go to state 38
    type   go to state 14
    arg    go to state 98


State 65

   19 funcdecl: types tIDENTIFIER tCBRACKL args tCBRACKR •
   25 funcdef: types tIDENTIFIER tCBRACKL args tCBRACKR • rtval prologue block epilogue

    tRTVALUE  shift, and go to state 99

    tAT       reduce using rule 34 (rtval)
    '{'       reduce using rule 34 (rtval)
    $default  reduce using rule 19 (funcdecl)

    rtval  go to state 100


State 66

   65 lval: tIDENTIFIER •

    $default  reduce using rule 65 (lval)


State 67

   67 lval: tCBRACKL • expr tCBRACKR tBRACKL expr tBRACKR

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 101
    string   go to state 55
    literal  go to state 56


State 68

   66 lval: lval • tBRACKL expr tBRACKR
   90 expr: tAT lval •

    tBRACKL  shift, and go to state 76

    $default  reduce using rule 90 (expr)


State 69

   89 expr: tSIZEOF tCBRACKL • expr tCBRACKR

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 102
    string   go to state 55
    literal  go to state 56


State 70

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   83     | tLOGNOT expr •
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tEQ  shift, and go to state 81
    tNE  shift, and go to state 82
    tGE  shift, and go to state 83
    tLE  shift, and go to state 84
    '>'  shift, and go to state 85
    '<'  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 83 (expr)


State 71

   88 expr: tIDENTIFIER tCBRACKL • exprs_aux tCBRACKR

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    $default  reduce using rule 96 (exprs_aux)

    lval       go to state 53
    expr       go to state 103
    exprs      go to state 104
    exprs_aux  go to state 105
    string     go to state 55
    literal    go to state 56


State 72

   67 lval: tCBRACKL expr • tCBRACKR tBRACKL expr tBRACKR
   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr
   91     | tCBRACKL expr • tCBRACKR

    tLOGAND   shift, and go to state 79
    tLOGOR    shift, and go to state 80
    tCBRACKR  shift, and go to state 106
    tEQ       shift, and go to state 81
    tNE       shift, and go to state 82
    tGE       shift, and go to state 83
    tLE       shift, and go to state 84
    '>'       shift, and go to state 85
    '<'       shift, and go to state 86
    '+'       shift, and go to state 87
    '-'       shift, and go to state 88
    '*'       shift, and go to state 89
    '/'       shift, and go to state 90
    '%'       shift, and go to state 91


State 73

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr
   92     | tBRACKL expr • tBRACKR

    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tBRACKR  shift, and go to state 107
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91


State 74

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr
   86     | '+' expr •

    $default  reduce using rule 86 (expr)


State 75

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr
   87     | '-' expr •

    $default  reduce using rule 87 (expr)


State 76

   66 lval: lval tBRACKL • expr tBRACKR

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 108
    string   go to state 55
    literal  go to state 56


State 77

   71 expr: lval '=' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 109
    string   go to state 55
    literal  go to state 56


State 78

   93 expr: lval '?' •

    $default  reduce using rule 93 (expr)


State 79

   84 expr: expr tLOGAND • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 110
    string   go to state 55
    literal  go to state 56


State 80

   85 expr: expr tLOGOR • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 111
    string   go to state 55
    literal  go to state 56


State 81

   81 expr: expr tEQ • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 112
    string   go to state 55
    literal  go to state 56


State 82

   80 expr: expr tNE • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 113
    string   go to state 55
    literal  go to state 56


State 83

   78 expr: expr tGE • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 114
    string   go to state 55
    literal  go to state 56


State 84

   79 expr: expr tLE • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 115
    string   go to state 55
    literal  go to state 56


State 85

   82 expr: expr '>' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 116
    string   go to state 55
    literal  go to state 56


State 86

   77 expr: expr '<' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 117
    string   go to state 55
    literal  go to state 56


State 87

   72 expr: expr '+' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 118
    string   go to state 55
    literal  go to state 56


State 88

   73 expr: expr '-' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 119
    string   go to state 55
    literal  go to state 56


State 89

   74 expr: expr '*' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 120
    string   go to state 55
    literal  go to state 56


State 90

   75 expr: expr '/' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 121
    string   go to state 55
    literal  go to state 56


State 91

   76 expr: expr '%' • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 122
    string   go to state 55
    literal  go to state 56


State 92

   99 string: string tSTRING •

    $default  reduce using rule 99 (string)


State 93

   17 funcdecl: types '*' tIDENTIFIER tCBRACKL args • tCBRACKR
   23 funcdef: types '*' tIDENTIFIER tCBRACKL args • tCBRACKR rtval prologue block epilogue
   44 args: args • tCOMMA arg

    tCOMMA    shift, and go to state 64
    tCBRACKR  shift, and go to state 123


State 94

   21 funcdecl: void_type tEXTERNAL tIDENTIFIER tCBRACKL args • tCBRACKR
   27 funcdef: void_type tEXTERNAL tIDENTIFIER tCBRACKL args • tCBRACKR prologue block epilogue
   44 args: args • tCOMMA arg

    tCOMMA    shift, and go to state 64
    tCBRACKR  shift, and go to state 124


State 95

   22 funcdecl: void_type tIDENTIFIER tCBRACKL args tCBRACKR •
   28 funcdef: void_type tIDENTIFIER tCBRACKL args tCBRACKR • prologue block epilogue

    tAT  shift, and go to state 125

    '{'       reduce using rule 29 (prologue)
    $default  reduce using rule 22 (funcdecl)

    prologue  go to state 126


State 96

   20 funcdecl: void_type '*' tIDENTIFIER tCBRACKL args • tCBRACKR
   26 funcdef: void_type '*' tIDENTIFIER tCBRACKL args • tCBRACKR prologue block epilogue
   44 args: args • tCOMMA arg

    tCOMMA    shift, and go to state 64
    tCBRACKR  shift, and go to state 127


State 97

   18 funcdecl: types tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR •
   24 funcdef: types tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR • rtval prologue block epilogue

    tRTVALUE  shift, and go to state 99

    tAT       reduce using rule 34 (rtval)
    '{'       reduce using rule 34 (rtval)
    $default  reduce using rule 18 (funcdecl)

    rtval  go to state 128


State 98

   44 args: args tCOMMA arg •

    $default  reduce using rule 44 (args)


State 99

   35 rtval: tRTVALUE • literal

    tINTEGER  shift, and go to state 44
    tFLOAT    shift, and go to state 45
    tNULLPTR  shift, and go to state 48

    literal  go to state 129


State 100

   25 funcdef: types tIDENTIFIER tCBRACKL args tCBRACKR rtval • prologue block epilogue

    tAT  shift, and go to state 125

    $default  reduce using rule 29 (prologue)

    prologue  go to state 130


State 101

   67 lval: tCBRACKL expr • tCBRACKR tBRACKL expr tBRACKR
   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tLOGAND   shift, and go to state 79
    tLOGOR    shift, and go to state 80
    tCBRACKR  shift, and go to state 131
    tEQ       shift, and go to state 81
    tNE       shift, and go to state 82
    tGE       shift, and go to state 83
    tLE       shift, and go to state 84
    '>'       shift, and go to state 85
    '<'       shift, and go to state 86
    '+'       shift, and go to state 87
    '-'       shift, and go to state 88
    '*'       shift, and go to state 89
    '/'       shift, and go to state 90
    '%'       shift, and go to state 91


State 102

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr
   89     | tSIZEOF tCBRACKL expr • tCBRACKR

    tLOGAND   shift, and go to state 79
    tLOGOR    shift, and go to state 80
    tCBRACKR  shift, and go to state 132
    tEQ       shift, and go to state 81
    tNE       shift, and go to state 82
    tGE       shift, and go to state 83
    tLE       shift, and go to state 84
    '>'       shift, and go to state 85
    '<'       shift, and go to state 86
    '+'       shift, and go to state 87
    '-'       shift, and go to state 88
    '*'       shift, and go to state 89
    '/'       shift, and go to state 90
    '%'       shift, and go to state 91


State 103

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr
   94 exprs: expr •

    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91

    $default  reduce using rule 94 (exprs)


State 104

   95 exprs: exprs • tCOMMA expr
   97 exprs_aux: exprs •

    tCOMMA  shift, and go to state 133

    $default  reduce using rule 97 (exprs_aux)


State 105

   88 expr: tIDENTIFIER tCBRACKL exprs_aux • tCBRACKR

    tCBRACKR  shift, and go to state 134


State 106

   67 lval: tCBRACKL expr tCBRACKR • tBRACKL expr tBRACKR
   91 expr: tCBRACKL expr tCBRACKR •

    tBRACKL  shift, and go to state 135

    $default  reduce using rule 91 (expr)


State 107

   92 expr: tBRACKL expr tBRACKR •

    $default  reduce using rule 92 (expr)


State 108

   66 lval: lval tBRACKL expr • tBRACKR
   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tBRACKR  shift, and go to state 136
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91


State 109

   71 expr: lval '=' expr •
   72     | expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91

    $default  reduce using rule 71 (expr)


State 110

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   84     | expr tLOGAND expr •
   85     | expr • tLOGOR expr

    tEQ  shift, and go to state 81
    tNE  shift, and go to state 82
    tGE  shift, and go to state 83
    tLE  shift, and go to state 84
    '>'  shift, and go to state 85
    '<'  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 84 (expr)


State 111

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr
   85     | expr tLOGOR expr •

    tLOGAND  shift, and go to state 79
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91

    $default  reduce using rule 85 (expr)


State 112

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   81     | expr tEQ expr •
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tGE  shift, and go to state 83
    tLE  shift, and go to state 84
    '>'  shift, and go to state 85
    '<'  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 81 (expr)


State 113

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   80     | expr tNE expr •
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tGE  shift, and go to state 83
    tLE  shift, and go to state 84
    '>'  shift, and go to state 85
    '<'  shift, and go to state 86
    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 80 (expr)


State 114

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   78     | expr tGE expr •
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 78 (expr)


State 115

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   79     | expr tLE expr •
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 79 (expr)


State 116

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   82     | expr '>' expr •
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 82 (expr)


State 117

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   77     | expr '<' expr •
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    '+'  shift, and go to state 87
    '-'  shift, and go to state 88
    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 77 (expr)


State 118

   72 expr: expr • '+' expr
   72     | expr '+' expr •
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 72 (expr)


State 119

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   73     | expr '-' expr •
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    '*'  shift, and go to state 89
    '/'  shift, and go to state 90
    '%'  shift, and go to state 91

    $default  reduce using rule 73 (expr)


State 120

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   74     | expr '*' expr •
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    $default  reduce using rule 74 (expr)


State 121

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   75     | expr '/' expr •
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    $default  reduce using rule 75 (expr)


State 122

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   76     | expr '%' expr •
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    $default  reduce using rule 76 (expr)


State 123

   17 funcdecl: types '*' tIDENTIFIER tCBRACKL args tCBRACKR •
   23 funcdef: types '*' tIDENTIFIER tCBRACKL args tCBRACKR • rtval prologue block epilogue

    tRTVALUE  shift, and go to state 99

    tAT       reduce using rule 34 (rtval)
    '{'       reduce using rule 34 (rtval)
    $default  reduce using rule 17 (funcdecl)

    rtval  go to state 137


State 124

   21 funcdecl: void_type tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR •
   27 funcdef: void_type tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR • prologue block epilogue

    tAT  shift, and go to state 125

    '{'       reduce using rule 29 (prologue)
    $default  reduce using rule 21 (funcdecl)

    prologue  go to state 138


State 125

   30 prologue: tAT • block

    '{'  shift, and go to state 139

    block  go to state 140


State 126

   28 funcdef: void_type tIDENTIFIER tCBRACKL args tCBRACKR prologue • block epilogue

    '{'  shift, and go to state 139

    block  go to state 141


State 127

   20 funcdecl: void_type '*' tIDENTIFIER tCBRACKL args tCBRACKR •
   26 funcdef: void_type '*' tIDENTIFIER tCBRACKL args tCBRACKR • prologue block epilogue

    tAT  shift, and go to state 125

    '{'       reduce using rule 29 (prologue)
    $default  reduce using rule 20 (funcdecl)

    prologue  go to state 142


State 128

   24 funcdef: types tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR rtval • prologue block epilogue

    tAT  shift, and go to state 125

    $default  reduce using rule 29 (prologue)

    prologue  go to state 143


State 129

   35 rtval: tRTVALUE literal •

    $default  reduce using rule 35 (rtval)


State 130

   25 funcdef: types tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue • block epilogue

    '{'  shift, and go to state 139

    block  go to state 144


State 131

   67 lval: tCBRACKL expr tCBRACKR • tBRACKL expr tBRACKR

    tBRACKL  shift, and go to state 135


State 132

   89 expr: tSIZEOF tCBRACKL expr tCBRACKR •

    $default  reduce using rule 89 (expr)


State 133

   95 exprs: exprs tCOMMA • expr

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 145
    string   go to state 55
    literal  go to state 56


State 134

   88 expr: tIDENTIFIER tCBRACKL exprs_aux tCBRACKR •

    $default  reduce using rule 88 (expr)


State 135

   67 lval: tCBRACKL expr tCBRACKR tBRACKL • expr tBRACKR

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 146
    string   go to state 55
    literal  go to state 56


State 136

   66 lval: lval tBRACKL expr tBRACKR •

    $default  reduce using rule 66 (lval)


State 137

   23 funcdef: types '*' tIDENTIFIER tCBRACKL args tCBRACKR rtval • prologue block epilogue

    tAT  shift, and go to state 125

    $default  reduce using rule 29 (prologue)

    prologue  go to state 147


State 138

   27 funcdef: void_type tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR prologue • block epilogue

    '{'  shift, and go to state 139

    block  go to state 148


State 139

   33 block: '{' • vardecs_aux instrs_aux '}'

    tEXTERNAL     shift, and go to state 1
    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    $default  reduce using rule 13 (vardecs_aux)

    vardec       go to state 149
    vardecs      go to state 150
    vardecs_aux  go to state 151
    types        go to state 152
    type         go to state 14


State 140

   30 prologue: tAT block •

    $default  reduce using rule 30 (prologue)


State 141

   28 funcdef: void_type tIDENTIFIER tCBRACKL args tCBRACKR prologue block • epilogue

    tSHIFT  shift, and go to state 153

    $default  reduce using rule 31 (epilogue)

    epilogue  go to state 154


State 142

   26 funcdef: void_type '*' tIDENTIFIER tCBRACKL args tCBRACKR prologue • block epilogue

    '{'  shift, and go to state 139

    block  go to state 155


State 143

   24 funcdef: types tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue • block epilogue

    '{'  shift, and go to state 139

    block  go to state 156


State 144

   25 funcdef: types tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block • epilogue

    tSHIFT  shift, and go to state 153

    $default  reduce using rule 31 (epilogue)

    epilogue  go to state 157


State 145

   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr
   95 exprs: exprs tCOMMA expr •

    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91

    $default  reduce using rule 95 (exprs)


State 146

   67 lval: tCBRACKL expr tCBRACKR tBRACKL expr • tBRACKR
   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tBRACKR  shift, and go to state 158
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91


State 147

   23 funcdef: types '*' tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue • block epilogue

    '{'  shift, and go to state 139

    block  go to state 159


State 148

   27 funcdef: void_type tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR prologue block • epilogue

    tSHIFT  shift, and go to state 153

    $default  reduce using rule 31 (epilogue)

    epilogue  go to state 160


State 149

   11 vardecs: vardec • ';'

    ';'  shift, and go to state 161


State 150

   12 vardecs: vardecs • vardec ';'
   14 vardecs_aux: vardecs •

    tEXTERNAL     shift, and go to state 1
    tTYPE_INT     shift, and go to state 2
    tTYPE_STRING  shift, and go to state 3
    tTYPE_FLOAT   shift, and go to state 4
    '<'           shift, and go to state 6

    $default  reduce using rule 14 (vardecs_aux)

    vardec  go to state 162
    types   go to state 152
    type    go to state 14


State 151

   33 block: '{' vardecs_aux • instrs_aux '}'

    tWHILE       shift, and go to state 163
    tIF          shift, and go to state 164
    tWRITE       shift, and go to state 165
    tWRITELN     shift, and go to state 166
    tAT          shift, and go to state 41
    tLEAVE       shift, and go to state 167
    tRESTART     shift, and go to state 168
    tRETURN      shift, and go to state 169
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52
    '{'          shift, and go to state 139

    $default  reduce using rule 48 (instrs_aux)

    block       go to state 170
    instrs      go to state 171
    instrs_aux  go to state 172
    leave       go to state 173
    restart     go to state 174
    stmt        go to state 175
    lval        go to state 53
    expr        go to state 176
    string      go to state 55
    literal     go to state 56


State 152

    8 vardec: types • '*' tIDENTIFIER var_aux
    9       | types • tIDENTIFIER var_aux

    tIDENTIFIER  shift, and go to state 177
    '*'          shift, and go to state 178


State 153

   32 epilogue: tSHIFT • block

    '{'  shift, and go to state 139

    block  go to state 179


State 154

   28 funcdef: void_type tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue •

    $default  reduce using rule 28 (funcdef)


State 155

   26 funcdef: void_type '*' tIDENTIFIER tCBRACKL args tCBRACKR prologue block • epilogue

    tSHIFT  shift, and go to state 153

    $default  reduce using rule 31 (epilogue)

    epilogue  go to state 180


State 156

   24 funcdef: types tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block • epilogue

    tSHIFT  shift, and go to state 153

    $default  reduce using rule 31 (epilogue)

    epilogue  go to state 181


State 157

   25 funcdef: types tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue •

    $default  reduce using rule 25 (funcdef)


State 158

   67 lval: tCBRACKL expr tCBRACKR tBRACKL expr tBRACKR •

    $default  reduce using rule 67 (lval)


State 159

   23 funcdef: types '*' tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block • epilogue

    tSHIFT  shift, and go to state 153

    $default  reduce using rule 31 (epilogue)

    epilogue  go to state 182


State 160

   27 funcdef: void_type tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue •

    $default  reduce using rule 27 (funcdef)


State 161

   11 vardecs: vardec ';' •

    $default  reduce using rule 11 (vardecs)


State 162

   12 vardecs: vardecs vardec • ';'

    ';'  shift, and go to state 183


State 163

   57 stmt: tWHILE • expr tDO block
   58     | tWHILE • expr tDO block tFINALLY block

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 184
    string   go to state 55
    literal  go to state 56


State 164

   59 stmt: tIF • expr tTHEN stmt
   60     | tIF • expr tTHEN stmt tELSE stmt

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 185
    string   go to state 55
    literal  go to state 56


State 165

   55 stmt: tWRITE • exprs ';'

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 103
    exprs    go to state 186
    string   go to state 55
    literal  go to state 56


State 166

   56 stmt: tWRITELN • exprs ';'

    tAT          shift, and go to state 41
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52

    lval     go to state 53
    expr     go to state 103
    exprs    go to state 187
    string   go to state 55
    literal  go to state 56


State 167

   50 leave: tLEAVE • ';'
   51      | tLEAVE • tINTEGER ';'

    tINTEGER  shift, and go to state 188
    ';'       shift, and go to state 189


State 168

   52 restart: tRESTART • ';'
   53        | tRESTART • tINTEGER ';'

    tINTEGER  shift, and go to state 190
    ';'       shift, and go to state 191


State 169

   63 stmt: tRETURN •

    $default  reduce using rule 63 (stmt)


State 170

   64 stmt: block •

    $default  reduce using rule 64 (stmt)


State 171

   47 instrs: instrs • stmt
   49 instrs_aux: instrs •

    tWHILE       shift, and go to state 163
    tIF          shift, and go to state 164
    tWRITE       shift, and go to state 165
    tWRITELN     shift, and go to state 166
    tAT          shift, and go to state 41
    tLEAVE       shift, and go to state 167
    tRESTART     shift, and go to state 168
    tRETURN      shift, and go to state 169
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52
    '{'          shift, and go to state 139

    $default  reduce using rule 49 (instrs_aux)

    block    go to state 170
    leave    go to state 173
    restart  go to state 174
    stmt     go to state 192
    lval     go to state 53
    expr     go to state 176
    string   go to state 55
    literal  go to state 56


State 172

   33 block: '{' vardecs_aux instrs_aux • '}'

    '}'  shift, and go to state 193


State 173

   61 stmt: leave •

    $default  reduce using rule 61 (stmt)


State 174

   62 stmt: restart •

    $default  reduce using rule 62 (stmt)


State 175

   46 instrs: stmt •

    $default  reduce using rule 46 (instrs)


State 176

   54 stmt: expr • ';'
   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91
    ';'      shift, and go to state 194


State 177

    9 vardec: types tIDENTIFIER • var_aux

    '='  shift, and go to state 31

    $default  reduce using rule 15 (var_aux)

    var_aux  go to state 32


State 178

    8 vardec: types '*' • tIDENTIFIER var_aux

    tIDENTIFIER  shift, and go to state 195


State 179

   32 epilogue: tSHIFT block •

    $default  reduce using rule 32 (epilogue)


State 180

   26 funcdef: void_type '*' tIDENTIFIER tCBRACKL args tCBRACKR prologue block epilogue •

    $default  reduce using rule 26 (funcdef)


State 181

   24 funcdef: types tEXTERNAL tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue •

    $default  reduce using rule 24 (funcdef)


State 182

   23 funcdef: types '*' tIDENTIFIER tCBRACKL args tCBRACKR rtval prologue block epilogue •

    $default  reduce using rule 23 (funcdef)


State 183

   12 vardecs: vardecs vardec ';' •

    $default  reduce using rule 12 (vardecs)


State 184

   57 stmt: tWHILE expr • tDO block
   58     | tWHILE expr • tDO block tFINALLY block
   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tDO      shift, and go to state 196
    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91


State 185

   59 stmt: tIF expr • tTHEN stmt
   60     | tIF expr • tTHEN stmt tELSE stmt
   72 expr: expr • '+' expr
   73     | expr • '-' expr
   74     | expr • '*' expr
   75     | expr • '/' expr
   76     | expr • '%' expr
   77     | expr • '<' expr
   78     | expr • tGE expr
   79     | expr • tLE expr
   80     | expr • tNE expr
   81     | expr • tEQ expr
   82     | expr • '>' expr
   84     | expr • tLOGAND expr
   85     | expr • tLOGOR expr

    tLOGAND  shift, and go to state 79
    tLOGOR   shift, and go to state 80
    tTHEN    shift, and go to state 197
    tEQ      shift, and go to state 81
    tNE      shift, and go to state 82
    tGE      shift, and go to state 83
    tLE      shift, and go to state 84
    '>'      shift, and go to state 85
    '<'      shift, and go to state 86
    '+'      shift, and go to state 87
    '-'      shift, and go to state 88
    '*'      shift, and go to state 89
    '/'      shift, and go to state 90
    '%'      shift, and go to state 91


State 186

   55 stmt: tWRITE exprs • ';'
   95 exprs: exprs • tCOMMA expr

    tCOMMA  shift, and go to state 133
    ';'     shift, and go to state 198


State 187

   56 stmt: tWRITELN exprs • ';'
   95 exprs: exprs • tCOMMA expr

    tCOMMA  shift, and go to state 133
    ';'     shift, and go to state 199


State 188

   51 leave: tLEAVE tINTEGER • ';'

    ';'  shift, and go to state 200


State 189

   50 leave: tLEAVE ';' •

    $default  reduce using rule 50 (leave)


State 190

   53 restart: tRESTART tINTEGER • ';'

    ';'  shift, and go to state 201


State 191

   52 restart: tRESTART ';' •

    $default  reduce using rule 52 (restart)


State 192

   47 instrs: instrs stmt •

    $default  reduce using rule 47 (instrs)


State 193

   33 block: '{' vardecs_aux instrs_aux '}' •

    $default  reduce using rule 33 (block)


State 194

   54 stmt: expr ';' •

    $default  reduce using rule 54 (stmt)


State 195

    8 vardec: types '*' tIDENTIFIER • var_aux

    '='  shift, and go to state 31

    $default  reduce using rule 15 (var_aux)

    var_aux  go to state 58


State 196

   57 stmt: tWHILE expr tDO • block
   58     | tWHILE expr tDO • block tFINALLY block

    '{'  shift, and go to state 139

    block  go to state 202


State 197

   59 stmt: tIF expr tTHEN • stmt
   60     | tIF expr tTHEN • stmt tELSE stmt

    tWHILE       shift, and go to state 163
    tIF          shift, and go to state 164
    tWRITE       shift, and go to state 165
    tWRITELN     shift, and go to state 166
    tAT          shift, and go to state 41
    tLEAVE       shift, and go to state 167
    tRESTART     shift, and go to state 168
    tRETURN      shift, and go to state 169
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52
    '{'          shift, and go to state 139

    block    go to state 170
    leave    go to state 173
    restart  go to state 174
    stmt     go to state 203
    lval     go to state 53
    expr     go to state 176
    string   go to state 55
    literal  go to state 56


State 198

   55 stmt: tWRITE exprs ';' •

    $default  reduce using rule 55 (stmt)


State 199

   56 stmt: tWRITELN exprs ';' •

    $default  reduce using rule 56 (stmt)


State 200

   51 leave: tLEAVE tINTEGER ';' •

    $default  reduce using rule 51 (leave)


State 201

   53 restart: tRESTART tINTEGER ';' •

    $default  reduce using rule 53 (restart)


State 202

   57 stmt: tWHILE expr tDO block •
   58     | tWHILE expr tDO block • tFINALLY block

    tFINALLY  shift, and go to state 204

    $default  reduce using rule 57 (stmt)


State 203

   59 stmt: tIF expr tTHEN stmt •
   60     | tIF expr tTHEN stmt • tELSE stmt

    tELSE  shift, and go to state 205

    $default  reduce using rule 59 (stmt)


State 204

   58 stmt: tWHILE expr tDO block tFINALLY • block

    '{'  shift, and go to state 139

    block  go to state 206


State 205

   60 stmt: tIF expr tTHEN stmt tELSE • stmt

    tWHILE       shift, and go to state 163
    tIF          shift, and go to state 164
    tWRITE       shift, and go to state 165
    tWRITELN     shift, and go to state 166
    tAT          shift, and go to state 41
    tLEAVE       shift, and go to state 167
    tRESTART     shift, and go to state 168
    tRETURN      shift, and go to state 169
    tSIZEOF      shift, and go to state 42
    tLOGNOT      shift, and go to state 43
    tINTEGER     shift, and go to state 44
    tFLOAT       shift, and go to state 45
    tIDENTIFIER  shift, and go to state 46
    tSTRING      shift, and go to state 47
    tNULLPTR     shift, and go to state 48
    tCBRACKL     shift, and go to state 49
    tBRACKL      shift, and go to state 50
    '+'          shift, and go to state 51
    '-'          shift, and go to state 52
    '{'          shift, and go to state 139

    block    go to state 170
    leave    go to state 173
    restart  go to state 174
    stmt     go to state 207
    lval     go to state 53
    expr     go to state 176
    string   go to state 55
    literal  go to state 56


State 206

   58 stmt: tWHILE expr tDO block tFINALLY block •

    $default  reduce using rule 58 (stmt)


State 207

   60 stmt: tIF expr tTHEN stmt tELSE stmt •

    $default  reduce using rule 60 (stmt)
